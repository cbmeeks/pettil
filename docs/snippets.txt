skipscan01
	.byt ld | TOS	; char
	.byt st | N0
	.byt pull
	.byt ld | TOS	; count
	.byt st | N1
	.byt pull		; addr
	.byt rs
skipscan02
	.byt ld | N1
	.byt bz , <(skipscan03-*-2)	; leave if count = 0
	.byt dcr | N1
	.byt ldi | N0
	.byt sub | TOS
	.byt rs
skip
	brk
	.byt bs, <(skipscan01-*-2)	; setup
skip01
	.byt bs, <(skipscan02-*-2)	; next char
	.byt bnz, <(skip01-*-2)
	.byt br, <(skipscan03-*-2)	; exit
scan
	brk
	.byt bs, <(skipscan01-*-2)	; setup
scan01
	.byt bs, <(skipscan02-*-2)	; next char
	.byt bz, <(scan01-*-2)		; fall through
skipscan03
	.byt popd | R12	; drop the BS return
	.byt ld | N0
	.byt st | TOS
	.byt push
	.byt ld | N1
	.byt st | TOS
	.byt rtn
	jmp next
skipscan03
	.byt rs


;16-bit multiply with 32-bit product 
;from 6502.org

multiplier = $f7 
multiplicand = $f9 
product = $fb 

mult16 lda #$00
sta product+2 ; clear upper bits of product
sta product+3 
ldx #$10 ; set binary count to 16 
shift_r lsr multiplier+1 ; divide multiplier by 2 
ror multiplier
bcc rotate_r 
lda product+2 ; get upper half of product and add multiplicand
clc
adc multiplicand
sta product+2
lda product+3 
adc multiplicand+1
rotate_r ror ; rotate partial product 
sta product+3 
ror product+2
ror product+1 
ror product 
dex
bne shift_r 
rts

: (")  r@ dup c@ r> + 1+ >r ; ( runtime of " )

: "    ( compile or move to pad a string literal )
	ascii " ?char
	state @  if  compile (") ,$
		else dup pad c! pad 1+ swap cmove
                    pad
               then ; immediate

memory move routine (west p. 355)
.C:b357  38          SEC
.C:b358  A5 57       LDA $57
.C:b35a  E5 5C       SBC $5C
.C:b35c  85 1F       STA $1F
.C:b35e  A8          TAY
.C:b35f  A5 58       LDA $58
.C:b361  E5 5D       SBC $5D
.C:b363  AA          TAX
.C:b364  E8          INX
.C:b365  98          TYA
.C:b366  F0 23       BEQ $B38B
.C:b368  A5 57       LDA $57
.C:b36a  38          SEC
.C:b36b  E5 1F       SBC $1F
.C:b36d  85 57       STA $57
.C:b36f  B0 03       BCS $B374
.C:b371  C6 58       DEC $58
.C:b373  38          SEC
.C:b374  A5 55       LDA $55
.C:b376  E5 1F       SBC $1F
.C:b378  85 55       STA $55
.C:b37a  B0 08       BCS $B384
.C:b37c  C6 56       DEC $56
.C:b37e  90 04       BCC $B384
.C:b380  B1 57       LDA ($57),Y
.C:b382  91 55       STA ($55),Y
.C:b384  88          DEY
.C:b385  D0 F9       BNE $B380
.C:b387  B1 57       LDA ($57),Y
.C:b389  91 55       STA ($55),Y
.C:b38b  C6 58       DEC $58
.C:b38d  C6 56       DEC $56
.C:b38f  CA          DEX
.C:b390  D0 F2       BNE $B384
.C:b392  60          RTS

