: blkbuf
    memsiz @ b/buf - ;

: vbuf
    blkbuf 2- ;

; fetches three bytes as a double.  Useful for retrieving screen
; linewrap bits from the beginning of the block buffer
: 3c@   ( addr -- d )
    dup 1+ @ swap c@ ;

threecfetch
    ldy #2
threecfetch01
    lda (tos),y
    pha
    dey
    lda (tos),y
    pha
    dey
    lda (tos),y
    sta n,y
    dey
    bpl threecfetch01
    iny
    lda n+2
    sta tos
    lda n+1
    sta tos+1
    lda n
    jmp pushya          ; [24]

threecfetch
    ldy #0
    lda (tos),y         ; msb
    pha
    iny
    lda (tos),y         ; 2sb
    pha
    iny
    lda (tos),y         ; lsb
    sta tos
    pla
    sta tos+1
    pla
    ldy #0
    jmp pushya          ; [23]

; store low 3 bytes of d at addr as msb, lsw
threecstore   ( d addr -- )
    ldy #2
    jsr setup
    lda n+3
    sta (tos),y
    iny
    lda n+2
    sta (tos),y
    iny
    lda n
    sta (tos),y
    jmp next            ; [22]

; store low 3 bytes of d at addr as msb, lsw
threecstore   ( d addr -- )
    ldy #0
    lda stackh,x
    sta (tos),y
    iny
    lda stackh+1,x
    sta (tos),y
    iny
    lda stackl,x
    sta (tos),y
    inx
    jmp poptwo          ; [20]


; store low 3 bytes of d at addr as msb, lsw
: 3c!    ( d addr -- )
    2dup c!  nip 1+ ! ;

; returns true if the three bytes at addr is valid linewrap
; (containing no double-0 bit pairs)
: wrap?  ( 7c00 -- flag )
    3c@ ff00 or zbits 2 < ;

; returns true if the 1024 bytes at addr is a valid screen block
;
: scr?   ( addr -- flag )
    dup notwrap? over $3e8 + 21 bl skip swap drop 0= or ;

;--------------------------------------------------------------
;
;       (BLOCK)   ( n -- addr flag )
;
; return the buffer address of block N. Create it if necessary.
; flag is true if the block is new, false if it already exists
: block

;       begin
;           #que @  0
;           ?do
;               i 2*  que +  @  execute
;           loop
;       again ;
;
