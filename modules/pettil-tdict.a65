; pettil-tdict.a65
#echo .       pettil-tdict.a65
#echo .       Temporary Dictionary (outer intepreter, compiler, editor, assembler)

#define SWEET16
#undefine ENTERTAINMENT x

#include modules/pettil-tdict.def
#include pettil-core.def
#echo .       pettil-core.def           Symbols only -- PETTIL core, built separately
;
; this is for a 32K environment
hitop=$7000
    .word hitop-2       	; load address so it can be loaded separately on a PET
    .word endofile-hitop	; size of the temporary dictionary
*=hitop
;--------------------------------------------------------------
;
;        LAUNCH   ( -- )
;
; This word must be the very first thing in the temporary 
; dictionary.  pettil-core has no knowledge of anything
; in this upper section, so LAUNCH must establish the linkage
; between the two dictionaries.  It does this by running FORGET
; to discard the COLD start word, and to rebuild the symbol
; table
;
launch
#include "enter.i65"
    .word plit
    .word errptr                ; We got here from COLD. Do the things
#include "pad.i65"              ; COLD didn't know how to do.  Don't scan
    .word errmess               ; input stream for the next word, because
#include "page.i65"             ; there's a CFA on the stack already.
    .word store
#include "page.i65"
    .word plit
    .word forth+3
#include "pad.i65"
    .word dup
#include "page.i65"
	.word plit
	.word usercontext
#include "pad.i65"
	.word store
#include "page.i65"
    .word dup
#include "page.i65"
	.word plit
	.word usercurrent
#include "pad.i65"
	.word store
#include "page.i65"
	.word context
#include "page.i65"
	.word store
#include "page.i65"
	.word _definitions
#include "page.i65"
	.word plit
	.word _abort
#include "pad.i65"
	.word startup
#include "page.i65"
	.word store
#include "page.i65"
	.word plit
	.word cold
#include "pad.i65"
launch01
    .word _forget
#include "page.i65"
    .word _abort

#include modules/pettil-user.a65
#include modules/pettil-interpreter.a65
#include modules/pettil-compiler.a65
#include modules/pettil-editor.a65
#include modules/pettil-assembler.a65
endofile
