; pettil-tdict.a65
#echo .       pettil-tdict.a65
#echo .       Transient Dictionary (outer intepreter, compiler, editor, assembler)

#include "inc/pettil-tdict.def"
#include "inc/sweet16.def"
#include "../tmp/pettil-core.def"
#echo .       pettil-core.def           Symbols only -- PETTIL core, built separately

; memory for symbol table to grow in pages, e.g. 4 = 1K
#define SYMBOL_GROW 0
;
; this is for a 32K environment
hitop=$6900
    .word hitop-2           ; load address
    .word endofile-hitop    ; size of the transient dictionary in bytes
*=hitop

;--------------------------------------------------------------
#if 0
name=LAUNCH
stack=( -- )
tags=nosymbol
This word must be the very first thing in the transient
dictionary.  pettil-core has no knowledge of anything in this
upper section, so [[LAUNCH]] must establish the linkage between
the two dictionaries.  It does this by running FORGET to
discard the word [[COLD]] which rebuilds the symbol table

* set [[WARNING]]
* set [[TDICT]]
* set [[TDP]]
* set [[#VOC]]
* set [[STARTUP]] to [[ABORT]]

d;m 0 8f;m 1f0 21f;z


```
: launch   ( -- )
   [ errptr ] literal   warning !
   1 #voc !
   [ endofile ] literal  tdp !
   ['] abort literal  startup !
   ['] cold (forget)  restart ;
```
#endif
#include "align.i65"
launch
    jsr enter
#include "pass.i65"
    .word plit
    .word errptr                ; We got here from COLD. Do the things
#include "page.i65"             ; COLD didn't know how to do.  Don't scan
    .word warning               ; input stream for the next word, because
#include "page.i65"             ; there's a CFA on the stack already.
    .word store
#include "pass.i65"
    .word plit
    .word tdictbase
#include "page.i65"
    .word tdict
#include "page.i65"
    .word store
#include "pass.i65"
    .word plit
    .word endofile              ; end of transient dictionary
#include "page.i65"
    .word tdp
#include "page.i65"
    .word store
#include "pass.i65"
    .word plit
    .word _abort
#include "page.i65"
    .word startup
#include "page.i65"
    .word store
#include "page.i65"
    .word _rehash
#include "page.i65"
    .word _deadbeef
#include "pass.i65"
    .word _restart

;--------------------------------------------------------------
#if 0
name=DEADBEEF
stack=( -- )
tags=startup,nosymbol
Fill available memory with DEADBEEF . Optionally runs at [[ONCE]] startup
after [[(FORGET)]] to assist in debugging.

```
: deadbeef   ( -- )
    vmbuf @
    begin
        4 - dup here >
    while
        dead.beef third 2!
    repeat
    drop ;
```

#endif
#include "align.i65"
_deadbeef
    jsr enter
#include "page.i65"
    .word vmbuf
#include "page.i65"
    .word fetch
#include "page.i65"
deadbeef01
    .word four
#include "page.i65"
    .word minus
#include "page.i65"
    .word dup
#include "page.i65"
    .word here
#include "pass.i65"
    .word gt
#include "pass.i65"
    .word qbranch
    .byt <(deadbeef02-*+1)
#include "pass.i65"
    .word plit
    .word $dead
#include "pass.i65"
    .word plit
    .word $beef
#include "page.i65"
    .word third
#include "page.i65"
    .word twostore
#include "pass.i65"
    .word branch
    .byt <(deadbeef01-*+1)
#include "page.i65"
deadbeef02
    .word drop
#include "pass.i65"
    .word plit
    .word $dead
#include "pass.i65"
    .word plit
    .word $beef
#include "page.i65"
    .word here
#include "page.i65"
    .word twostore
#include "pass.i65"
    .word exit

;--------------------------------------------------------------
#if 0
name=TDICTBASE
stack=( -- )
tags=nosymbol,nosymbol
This marks the upper fence above the symbol table.  Code below this mark
may be overwritten by [[SYMTAB]] growth
#endif
tdictbase

;--------------------------------------------------------------
#print *
#include "pettil-user.a65"
#print *
#include "pettil-dictionary.a65"
#print *
#include "pettil-interpreter.a65"
#print *
#include "pettil-compiler.a65"
#print *
#include "pettil-utils.a65"
#print *
#include "pettil-editor.a65"
#print *
#include "pettil-assembler.a65"
#print *

;--------------------------------------------------------------
#if 0
name=ENDOFILE
stack=( -- )
tags=nosymbol,nosymbol
This marks the end of the transient dictionary ([[TDP]])
#endif
endofile
